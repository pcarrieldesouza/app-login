name: Entrega Contínua (após merge)
on:
  pull_request:
    branches: [ main ]
    types: [ closed ]
  workflow_dispatch:

jobs:
  empacotar-codigo:
    name: Empacotar Código (CD)
    if: ${{ github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - name: Baixar repositório
        uses: actions/checkout@v4
      - name: Gerar artefato do código
        uses: actions/upload-artifact@v4
        with:
          name: projetozipado.zip
          path: |
            **/*.py
            README.md
            requirements.txt
            Dockerfile

  construir-e-publicar-docker:
    name: Construir e Publicar Docker (CD)
    if: ${{ github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    needs: empacotar-codigo
    permissions:
      contents: read
      packages: write
    steps:
      - name: Baixar repositório
        uses: actions/checkout@v4
      - name: Configurar QEMU
        uses: docker/setup-qemu-action@v3
      - name: Configurar Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login no Docker Hub
        if: ${{ secrets.DOCKERHUB_USERNAME && secrets.DOCKERHUB_TOKEN }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Construir e enviar imagem
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: ${{ secrets.DOCKERHUB_USERNAME != '' && secrets.DOCKERHUB_TOKEN != '' }}
          tags: "${{ (secrets.DOCKERHUB_USERNAME != '' && secrets.DOCKERHUB_TOKEN != '') && format('{0}/login-web:latest', secrets.DOCKERHUB_USERNAME) || 'local/login-web:latest' }}"

  simular-deploy:
    name: Simular Deploy (CD)
    if: ${{ github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    needs: empacotar-codigo
    steps:
      - uses: actions/download-artifact@v5
        with:
          name: projetozipado.zip
      - name: Listar arquivos do artefato
        run: ls -R
